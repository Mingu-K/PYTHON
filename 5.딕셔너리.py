#딕셔너리는 대응 관계를 나타내는 자료형을 지닌 것으로 연관배열 또는 해시라고 부른다.
#딕셔너리는 key 와 value의 관게를 가지고 이용된다. 한쌍의 관계를 갖는 자료형이다.
#딕셔너리의 모습은 {key1:value1, key2:value2, key3:value3, 딕셔너리는 {}로 지정
#딕셔너리 밸류에는 리스트를 대입할 수도 있다.
#딕셔너리는 인덱싱이나 슬라이싱 기법을 사용할 수 없다. 딕셔너리의 a[1] 은 2번째 값이 아닌 키 1의 밸류를 출력하기 때문이다.

####

#딕셔너리 쌍 추가, 삭제

# a = {1:'a'}
# a[2]='b'            # 딕셔너리ㅁ명 [키] = 밸류 로 딕셔너리의 요소를 추가할 수 있다.
# print(a)

# a[3] = [1,2,3]
# print(a)            # 키값에 리스트를 추가할 수도 있다.

# a['네번째'] = 'money'
# print(a)            # 문자열도 가능

# del a[1]
# print(a)            # del a[키] [] 사이에 키를 적으면 특정 키와 밸류가 삭제된다.

####

#키가 중복된다면?

# dic = {1 :'a', 1 :'b'} #파이썬의 처리방향을 위에서 아래 오른쪽에서 왼쪽이다. 그러므로 딕셔너리는 키값이 중복되도 첫번째 것만 출력하고
# print(dic[1])          # 나머지는 무시한다. 그러므로 오른쪽에 첫번째 키만 출력한다.나머지는 무시.

####

# 딕셔너리의 튜플과 리스트 활용

# dic = {(1,2):[123,123],(1,2,3):[412,123,12]}

# print(dic[1,2])             #딕셔너리의 키값에는 튜플만 가능하고, 밸류 값은 리스트와 튜플 둘 모두 가능하다.
# print(dic[1,2,3])

####

#딕셔너리 관련 함수

#키 값 출력하기 / dic.keys()

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}
# print(dic.keys())               # dic의 딕셔너리의 리스트의 모양으로 키값을 출력해준다.

# for k in dic.keys():
#     print(k, end = " ")                    # dic의 기값을 출력하는 함수

#밸류 값 출력하기   dic.values()

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}

# print(dic.values())

# 키값과 밸류값 쌍을 확인하기 dic.items()

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}

# print(dic.items())

#키와 밸류 모두 지우기  dic.clear()

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}
# print(dic.clear())

# 키로 밸류 얻는 방법 dic.get()

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}
# print(dic.get('name'))
# print(dic.get('you'))           # 키값이 없을 시 none이라고 출력이 되고 none은 거짓이라는 뜻이다.
# print(dic('you'))               # get이 함수로 찾을 때는 오류가 발생한다.

#get의 다른 활용법 dic.get( , )

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}
# print(dic.get('name','없다'))       #dic.get(,)이라고 함수를 입력할 때 앞에 키 값이 딕셔너리에 존재하면 맞는 밸류를 출력하고
# print(dic.get('you','없다'))       #존재하지 않는 키값을 찾으면 (,)중 뒤에 값이 디폴트 값으로 출력된다.
 
#딕셔너리에 해당 키가 있는 지 알아보기  ' ' in dic

# dic = {'name': 'pey','phone':'01090545980', 'birth':'0519'}
# print('you' in dic)                 # '원하는 키값' in 딕셔너리 이름 함수를 통해서 원하는 키값이 해당 딕셔너리에 있는지 알 수 있고
#                                     # 있고 없음은 true or false로 출력된다.